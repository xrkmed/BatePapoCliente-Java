/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/Application.java to edit this template
 */
package visual;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.Queue;

import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

import controllers.ConnectionDAO;
import models.Message;

/**
 *
 * @author arkmed
 */
public class ChatSample extends javax.swing.JFrame {

    /**
     * Creates new form ChatSample
     */
    public ChatSample() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        mensagemText = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        connectedPlayers = new javax.swing.JTable();
        menuBar = new javax.swing.JMenuBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Chat Global"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setEnabled(false);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
        }

        mensagemText.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        mensagemText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                mensagemTextKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                mensagemTextKeyPressed(evt);
            }
        });

        jButton1.setText("Enviar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        connectedPlayers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Pessoas Conectadas"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        connectedPlayers.setEnabled(false);
        connectedPlayers.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(connectedPlayers);
        if (connectedPlayers.getColumnModel().getColumnCount() > 0) {
            connectedPlayers.getColumnModel().getColumn(0).setResizable(false);
        }

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 851, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(mensagemText, javax.swing.GroupLayout.PREFERRED_SIZE, 899, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 473, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(mensagemText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                        .addGap(1, 1, 1)))
                .addContainerGap(52, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if(mensagemText.getText().length() > 0){
            ConnectionDAO.getInstance().getConn().sendMessage(mensagemText.getText());
            mensagemText.setText("");
            mensagemText.requestFocus();
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void mensagemTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mensagemTextKeyTyped

    }//GEN-LAST:event_mensagemTextKeyTyped

    private void mensagemTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mensagemTextKeyPressed
        if(evt.getKeyCode() == 10){
            if(mensagemText.getText().length() > 0){
                ConnectionDAO.getInstance().getConn().sendMessage(mensagemText.getText());
                mensagemText.setText("");
                mensagemText.requestFocus();
            }
        }
    }//GEN-LAST:event_mensagemTextKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChatSample.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChatSample.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChatSample.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChatSample.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ChatSample().setVisible(true);
            }
        });
    }

    //Funcoes do Protocolo
    public void receiveUsers(Message message){
        ArrayList<String> users = new ArrayList<String>();
        while(message.getPacketCount() > 0){
            String username = message.getPacket().getString().trim();
            users.add(username);
        }

        users.sort((a, b) -> {
            return a.compareTo(b);
        });

        String[] columnNames = {"Usu√°rios Conectados"};
        String[][] data = new String[users.size()][1];

        for(int i = 0; i < users.size(); i++){
            data[i][0] = users.get(i);
        }

        connectedPlayers.setModel(new DefaultTableModel(data, columnNames));
    }

    public void receiveHistorico(Message message){
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

        model.setRowCount(0);
        int count = message.getPacketCount();
        for(int i = 0; i < count; i++){
            if(i%3 == 0){
                String actor = message.getPacket().getString().trim();
                String content = message.getPacket().getString().trim();
                String timeString = message.getPacket().getString().trim();

                model.addRow(new Object[]{"[" + timeString +"]" + actor + " disse: " + content});
            }
        }

        ConnectionDAO.getInstance().getConn().getClient().setStopShowingNewMessages(false);
    }

    public void receiveMessage(Message message){
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        String actor = message.getPacket().getString().trim();
        String content = message.getPacket().getString().trim();
        String timeString = new SimpleDateFormat("HH:mm:ss").format(new java.util.Date()).trim();
        if(message.getPacketCount() > 0){
            timeString = message.getPacket().getString().trim();
        }
        
        model.addRow(new Object[]{"[" + timeString +"]" + actor + " disse: " + content});
    }


    public JTextField getChatText() {
        return mensagemText;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable connectedPlayers;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField mensagemText;
    private javax.swing.JMenuBar menuBar;
    // End of variables declaration//GEN-END:variables

}
